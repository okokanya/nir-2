{"ast":null,"code":"var _jsxFileName = \"/Users/annapuskina/Documents/nir/src/RingChart.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RingChart = ({\n  data\n}) => {\n  // Считаем общую сумму всех значений\n  const totalValue = data.reduce((sum, segment) => sum + segment[1], 0);\n\n  // Рассчитываем углы и цвета для каждого сегмента\n  // let currentAngle = 0;\n  // const segments = data.map(([name, value, color]) => {\n  //   const percentage = (value / totalValue) * 100;\n  //   const startAngle = currentAngle;\n  //   const endAngle = currentAngle + (percentage / 100) * 360;\n  //   currentAngle = endAngle;\n  //   return { name, percentage, color, startAngle, endAngle };\n  // });\n\n  // const renderSegments = () => {\n  //   return segments.map((segment, index) => {\n  //     const largeArcFlag = segment.endAngle - segment.startAngle > 180 ? 1 : 0;\n  //     const startRadians = (Math.PI * segment.startAngle) / 180;\n  //     const endRadians = (Math.PI * segment.endAngle) / 180;\n\n  //     const startX = 50 + 50 * Math.cos(startRadians);\n  //     const startY = 50 + 50 * Math.sin(startRadians);\n  //     const endX = 50 + 50 * Math.cos(endRadians);\n  //     const endY = 50 + 50 * Math.sin(endRadians);\n\n  //     const pathData = `M 50 50 L ${startX} ${startY} A 50 50 0 ${largeArcFlag} 1 ${endX} ${endY} Z`;\n\n  //     return <path key={index} d={pathData} fill={segment.color} />;\n  //   });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: 200,\n      height: 200,\n      viewBox: \"0 0 100 100\",\n      style: {\n        display: \"block\",\n        margin: \"0 auto\"\n      },\n      children: renderSegments()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        margin: \"0 auto\",\n        borderCollapse: \"collapse\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"5px\"\n            },\n            children: \"\\u0421\\u0435\\u0433\\u043C\\u0435\\u043D\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"5px\"\n            },\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: segments.map((segment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"5px\"\n            },\n            children: segment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"5px\"\n            },\n            children: [segment.percentage.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = RingChart;\nexport default RingChart;\nvar _c;\n$RefreshReg$(_c, \"RingChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RingChart","data","totalValue","reduce","sum","segment","style","textAlign","children","width","height","viewBox","display","margin","renderSegments","fileName","_jsxFileName","lineNumber","columnNumber","borderCollapse","border","padding","segments","map","index","name","percentage","toFixed","_c","$RefreshReg$"],"sources":["/Users/annapuskina/Documents/nir/src/RingChart.js"],"sourcesContent":["import React from \"react\";\n\nconst RingChart = ({ data }) => {\n  // Считаем общую сумму всех значений\n  const totalValue = data.reduce((sum, segment) => sum + segment[1], 0);\n\n  // Рассчитываем углы и цвета для каждого сегмента\n  // let currentAngle = 0;\n  // const segments = data.map(([name, value, color]) => {\n  //   const percentage = (value / totalValue) * 100;\n  //   const startAngle = currentAngle;\n  //   const endAngle = currentAngle + (percentage / 100) * 360;\n  //   currentAngle = endAngle;\n  //   return { name, percentage, color, startAngle, endAngle };\n  // });\n\n  // const renderSegments = () => {\n  //   return segments.map((segment, index) => {\n  //     const largeArcFlag = segment.endAngle - segment.startAngle > 180 ? 1 : 0;\n  //     const startRadians = (Math.PI * segment.startAngle) / 180;\n  //     const endRadians = (Math.PI * segment.endAngle) / 180;\n\n  //     const startX = 50 + 50 * Math.cos(startRadians);\n  //     const startY = 50 + 50 * Math.sin(startRadians);\n  //     const endX = 50 + 50 * Math.cos(endRadians);\n  //     const endY = 50 + 50 * Math.sin(endRadians);\n\n  //     const pathData = `M 50 50 L ${startX} ${startY} A 50 50 0 ${largeArcFlag} 1 ${endX} ${endY} Z`;\n\n  //     return <path key={index} d={pathData} fill={segment.color} />;\n  //   });\n  // };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <svg width={200} height={200} viewBox=\"0 0 100 100\" style={{ display: \"block\", margin: \"0 auto\" }}>\n        {renderSegments()}\n      </svg>\n      <table style={{ margin: \"0 auto\", borderCollapse: \"collapse\" }}>\n        <thead>\n          <tr>\n            <th style={{ border: \"1px solid black\", padding: \"5px\" }}>Сегмент</th>\n            <th style={{ border: \"1px solid black\", padding: \"5px\" }}>%</th>\n          </tr>\n        </thead>\n        <tbody>\n          {segments.map((segment, index) => (\n            <tr key={index}>\n              <td style={{ border: \"1px solid black\", padding: \"5px\" }}>{segment.name}</td>\n              <td style={{ border: \"1px solid black\", padding: \"5px\" }}>\n                {segment.percentage.toFixed(2)}%\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RingChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}