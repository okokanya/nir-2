{"ast":null,"code":"var _jsxFileName = \"/Users/annapuskina/Documents/nir/src/RingChart.js\";\nimport React from 'react';\nimport './RingChart.css'; // Подключаем стили\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RingChart = ({\n  data\n}) => {\n  const total = data.reduce((sum, segment) => sum + segment[1], 0);\n\n  // Формируем строку для conic-gradient\n  let cumulativePercentage = 0;\n  const segmentPositions = [];\n  const gradientString = data.map(([name, value, color]) => {\n    const percentage = value / total * 100;\n    const startPercentage = cumulativePercentage;\n    const endPercentage = cumulativePercentage + percentage;\n    const midPercentage = (startPercentage + endPercentage) / 2;\n    cumulativePercentage += percentage;\n    segmentPositions.push(midPercentage);\n    return `${color} ${startPercentage.toFixed(2)}%, ${color} ${endPercentage.toFixed(2)}%`;\n  }).join(', ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"donut-chart\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donut-container\",\n      style: {\n        background: `conic-gradient(${gradientString})`\n      },\n      children: segmentPositions.map((position, index) => {\n        const angle = position / 100 * 360;\n        const x = 50 + 40 * Math.cos((angle - 90) * (Math.PI / 180));\n        const y = 50 + 40 * Math.sin((angle - 90) * (Math.PI / 180));\n        const [name, value, color, emoji] = data[index];\n        const truncatedName = name.length > 8 ? `${name.slice(0, 8)}...` : name;\n        const percentage = (value / total * 100).toFixed(1);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"donut-label\",\n          style: {\n            position: 'absolute',\n            top: `${y}%`,\n            left: `${x}%`,\n            transform: 'translate(-50%, -50%)',\n            color: color,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [truncatedName, \" - \", percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = RingChart;\nexport default RingChart;\nvar _c;\n$RefreshReg$(_c, \"RingChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RingChart","data","total","reduce","sum","segment","cumulativePercentage","segmentPositions","gradientString","map","name","value","color","percentage","startPercentage","endPercentage","midPercentage","push","toFixed","join","className","children","style","background","position","index","angle","x","Math","cos","PI","y","sin","emoji","truncatedName","length","slice","top","left","transform","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annapuskina/Documents/nir/src/RingChart.js"],"sourcesContent":["import React from 'react';\nimport './RingChart.css'; // Подключаем стили\n\nconst RingChart = ({ data }) => {\n    const total = data.reduce((sum, segment) => sum + segment[1], 0);\n\n    // Формируем строку для conic-gradient\n    let cumulativePercentage = 0;\n    const segmentPositions = [];\n    const gradientString = data.map(([name, value, color]) => {\n        const percentage = (value / total) * 100;\n        const startPercentage = cumulativePercentage;\n        const endPercentage = cumulativePercentage + percentage;\n        const midPercentage = (startPercentage + endPercentage) / 2;\n        cumulativePercentage += percentage;\n\n        segmentPositions.push(midPercentage);\n        return `${color} ${startPercentage.toFixed(2)}%, ${color} ${endPercentage.toFixed(2)}%`;\n    }).join(', ');\n\n    return (\n        <div className=\"donut-chart\">\n            <div\n                className=\"donut-container\"\n                style={{\n                    background: `conic-gradient(${gradientString})`\n                }}\n            >\n                {segmentPositions.map((position, index) => {\n                    const angle = (position / 100) * 360;\n                    const x = 50 + 40 * Math.cos((angle - 90) * (Math.PI / 180));\n                    const y = 50 + 40 * Math.sin((angle - 90) * (Math.PI / 180));\n\n                    const [name, value, color, emoji] = data[index];\n                    const truncatedName =\n                        name.length > 8 ? `${name.slice(0, 8)}...` : name;\n                    const percentage = ((value / total) * 100).toFixed(1);\n\n                    return (\n                        <div\n                            key={index}\n                            className=\"donut-label\"\n                            style={{\n                                position: 'absolute',\n                                top: `${y}%`,\n                                left: `${x}%`,\n                                transform: 'translate(-50%, -50%)',\n                                color: color,\n                                textAlign: 'center'\n                            }}\n                        >\n                            <span>{emoji}</span>\n                            <br />\n                            <span>{truncatedName} - {percentage}%</span>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default RingChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC5B,MAAMC,KAAK,GAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;EAEhE;EACA,IAAIC,oBAAoB,GAAG,CAAC;EAC5B,MAAMC,gBAAgB,GAAG,EAAE;EAC3B,MAAMC,cAAc,GAAGP,IAAI,CAACQ,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,CAAC,KAAK;IACtD,MAAMC,UAAU,GAAIF,KAAK,GAAGT,KAAK,GAAI,GAAG;IACxC,MAAMY,eAAe,GAAGR,oBAAoB;IAC5C,MAAMS,aAAa,GAAGT,oBAAoB,GAAGO,UAAU;IACvD,MAAMG,aAAa,GAAG,CAACF,eAAe,GAAGC,aAAa,IAAI,CAAC;IAC3DT,oBAAoB,IAAIO,UAAU;IAElCN,gBAAgB,CAACU,IAAI,CAACD,aAAa,CAAC;IACpC,OAAO,GAAGJ,KAAK,IAAIE,eAAe,CAACI,OAAO,CAAC,CAAC,CAAC,MAAMN,KAAK,IAAIG,aAAa,CAACG,OAAO,CAAC,CAAC,CAAC,GAAG;EAC3F,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EAEb,oBACIpB,OAAA;IAAKqB,SAAS,EAAC,aAAa;IAAAC,QAAA,eACxBtB,OAAA;MACIqB,SAAS,EAAC,iBAAiB;MAC3BE,KAAK,EAAE;QACHC,UAAU,EAAE,kBAAkBf,cAAc;MAChD,CAAE;MAAAa,QAAA,EAEDd,gBAAgB,CAACE,GAAG,CAAC,CAACe,QAAQ,EAAEC,KAAK,KAAK;QACvC,MAAMC,KAAK,GAAIF,QAAQ,GAAG,GAAG,GAAI,GAAG;QACpC,MAAMG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACH,KAAK,GAAG,EAAE,KAAKE,IAAI,CAACE,EAAE,GAAG,GAAG,CAAC,CAAC;QAC5D,MAAMC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAGH,IAAI,CAACI,GAAG,CAAC,CAACN,KAAK,GAAG,EAAE,KAAKE,IAAI,CAACE,EAAE,GAAG,GAAG,CAAC,CAAC;QAE5D,MAAM,CAACpB,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEqB,KAAK,CAAC,GAAGhC,IAAI,CAACwB,KAAK,CAAC;QAC/C,MAAMS,aAAa,GACfxB,IAAI,CAACyB,MAAM,GAAG,CAAC,GAAG,GAAGzB,IAAI,CAAC0B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG1B,IAAI;QACrD,MAAMG,UAAU,GAAG,CAAEF,KAAK,GAAGT,KAAK,GAAI,GAAG,EAAEgB,OAAO,CAAC,CAAC,CAAC;QAErD,oBACInB,OAAA;UAEIqB,SAAS,EAAC,aAAa;UACvBE,KAAK,EAAE;YACHE,QAAQ,EAAE,UAAU;YACpBa,GAAG,EAAE,GAAGN,CAAC,GAAG;YACZO,IAAI,EAAE,GAAGX,CAAC,GAAG;YACbY,SAAS,EAAE,uBAAuB;YAClC3B,KAAK,EAAEA,KAAK;YACZ4B,SAAS,EAAE;UACf,CAAE;UAAAnB,QAAA,gBAEFtB,OAAA;YAAAsB,QAAA,EAAOY;UAAK;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpB7C,OAAA;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN7C,OAAA;YAAAsB,QAAA,GAAOa,aAAa,EAAC,KAAG,EAACrB,UAAU,EAAC,GAAC;UAAA;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAbvCnB,KAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcT,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACC,EAAA,GAzDI7C,SAAS;AA2Df,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}