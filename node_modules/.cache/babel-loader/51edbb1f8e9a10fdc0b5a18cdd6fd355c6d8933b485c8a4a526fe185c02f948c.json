{"ast":null,"code":"var _jsxFileName = \"/Users/annapuskina/Documents/nir/src/RingChart.js\";\nimport React from 'react';\nimport './DonutChart.css'; // Подключаем стили\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DonutChart = ({\n  data\n}) => {\n  const total = data.reduce((sum, segment) => sum + segment[1], 0);\n\n  // Создаем градиентные остановки\n  let cumulativePercentage = 0;\n  const gradientStops = data.map(([name, value, color]) => {\n    const percentage = value / total * 100;\n    const startPercentage = cumulativePercentage;\n    const endPercentage = startPercentage + percentage;\n    cumulativePercentage += percentage;\n    return {\n      color,\n      startPercentage,\n      endPercentage\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"donut-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donut-container\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"donut-svg\",\n        viewBox: \"0 0 36 36\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"gradient\",\n            gradientUnits: \"userSpaceOnUse\",\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"36\",\n            y2: \"36\",\n            children: gradientStops.map((stop, index) => /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: `${stop.startPercentage}%`,\n              stopColor: stop.color\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"donut-background\",\n          cx: \"18\",\n          cy: \"18\",\n          r: \"15.915\",\n          fill: \"transparent\",\n          stroke: \"#e6e6e6\",\n          strokeWidth: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"donut-progress\",\n          cx: \"18\",\n          cy: \"18\",\n          r: \"15.915\",\n          fill: \"transparent\",\n          stroke: \"url(#gradient)\",\n          strokeWidth: \"3\",\n          strokeDasharray: \"100 100\",\n          transform: \"rotate(-90 18 18)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donut-labels\",\n      children: data.map(([name, value, color, emoji], index) => {\n        const truncatedName = name.length > 8 ? `${name.slice(0, 8)}...` : name;\n        const percentage = (value / total * 100).toFixed(1);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"donut-label\",\n          style: {\n            color\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [emoji, \" \", truncatedName, \" - \", percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = DonutChart;\nexport default DonutChart;\nvar _c;\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DonutChart","data","total","reduce","sum","segment","cumulativePercentage","gradientStops","map","name","value","color","percentage","startPercentage","endPercentage","className","children","viewBox","id","gradientUnits","x1","y1","x2","y2","stop","index","offset","stopColor","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","fill","stroke","strokeWidth","strokeDasharray","transform","emoji","truncatedName","length","slice","toFixed","style","_c","$RefreshReg$"],"sources":["/Users/annapuskina/Documents/nir/src/RingChart.js"],"sourcesContent":["import React from 'react';\nimport './DonutChart.css'; // Подключаем стили\n\nconst DonutChart = ({ data }) => {\n    const total = data.reduce((sum, segment) => sum + segment[1], 0);\n\n    // Создаем градиентные остановки\n    let cumulativePercentage = 0;\n    const gradientStops = data.map(([name, value, color]) => {\n        const percentage = (value / total) * 100;\n        const startPercentage = cumulativePercentage;\n        const endPercentage = startPercentage + percentage;\n        cumulativePercentage += percentage;\n\n        return {\n            color,\n            startPercentage,\n            endPercentage,\n        };\n    });\n\n    return (\n        <div className=\"donut-chart\">\n            <div className=\"donut-container\">\n                <svg className=\"donut-svg\" viewBox=\"0 0 36 36\">\n                    <defs>\n                        <linearGradient id=\"gradient\" gradientUnits=\"userSpaceOnUse\" x1=\"0\" y1=\"0\" x2=\"36\" y2=\"36\">\n                            {gradientStops.map((stop, index) => (\n                                <stop\n                                    key={index}\n                                    offset={`${stop.startPercentage}%`}\n                                    stopColor={stop.color}\n                                />\n                            ))}\n                        </linearGradient>\n                    </defs>\n                    <circle\n                        className=\"donut-background\"\n                        cx=\"18\"\n                        cy=\"18\"\n                        r=\"15.915\"\n                        fill=\"transparent\"\n                        stroke=\"#e6e6e6\"\n                        strokeWidth=\"3\"\n                    />\n                    <circle\n                        className=\"donut-progress\"\n                        cx=\"18\"\n                        cy=\"18\"\n                        r=\"15.915\"\n                        fill=\"transparent\"\n                        stroke=\"url(#gradient)\"\n                        strokeWidth=\"3\"\n                        strokeDasharray=\"100 100\"\n                        transform=\"rotate(-90 18 18)\"\n                    />\n                </svg>\n            </div>\n\n            <div className=\"donut-labels\">\n                {data.map(([name, value, color, emoji], index) => {\n                    const truncatedName =\n                        name.length > 8 ? `${name.slice(0, 8)}...` : name;\n                    const percentage = ((value / total) * 100).toFixed(1);\n\n                    return (\n                        <div key={index} className=\"donut-label\" style={{ color }}>\n                            <span>{emoji} {truncatedName} - {percentage}%</span>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default DonutChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}