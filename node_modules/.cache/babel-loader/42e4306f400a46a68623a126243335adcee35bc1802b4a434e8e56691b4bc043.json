{"ast":null,"code":"var _jsxFileName = \"/Users/annapuskina/Documents/nir/src/RingChart.js\";\nimport React from 'react';\nimport './RingChart.css'; // Подключаем стили\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RingChart = ({\n  data\n}) => {\n  const total = data.reduce((sum, segment) => sum + segment[1], 0);\n\n  // Формируем строку для conic-gradient\n  let cumulativePercentage = 0;\n  const gradientString = data.map(([name, value, color]) => {\n    const percentage = value / total * 100;\n    const startPercentage = cumulativePercentage;\n    const endPercentage = cumulativePercentage + percentage;\n    cumulativePercentage += percentage;\n    return `${color} ${startPercentage.toFixed(2)}%, ${color} ${endPercentage.toFixed(2)}%`;\n  }).join(', ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"donut-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donut-container\",\n      style: {\n        background: `conic-gradient(${gradientString})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donut-labels\",\n      children: data.map(([name, value, color, emoji], index) => {\n        const truncatedName = name.length > 8 ? `${name.slice(0, 8)}...` : name;\n        const percentage = (value / total * 100).toFixed(1);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"donut-label\",\n          style: {\n            color\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [emoji, \" \", truncatedName, \" - \", percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = RingChart;\nexport default RingChart;\nvar _c;\n$RefreshReg$(_c, \"RingChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RingChart","data","total","reduce","sum","segment","cumulativePercentage","gradientString","map","name","value","color","percentage","startPercentage","endPercentage","toFixed","join","className","children","style","background","fileName","_jsxFileName","lineNumber","columnNumber","emoji","index","truncatedName","length","slice","_c","$RefreshReg$"],"sources":["/Users/annapuskina/Documents/nir/src/RingChart.js"],"sourcesContent":["import React from 'react';\nimport './RingChart.css'; // Подключаем стили\n\nconst RingChart = ({ data }) => {\n    const total = data.reduce((sum, segment) => sum + segment[1], 0);\n\n    // Формируем строку для conic-gradient\n    let cumulativePercentage = 0;\n    const gradientString = data.map(([name, value, color]) => {\n        const percentage = (value / total) * 100;\n        const startPercentage = cumulativePercentage;\n        const endPercentage = cumulativePercentage + percentage;\n        cumulativePercentage += percentage;\n        return `${color} ${startPercentage.toFixed(2)}%, ${color} ${endPercentage.toFixed(2)}%`;\n    }).join(', ');\n\n    return (\n        <div className=\"donut-chart\">\n            <div\n                className=\"donut-container\"\n                style={{\n                    background: `conic-gradient(${gradientString})`\n                }}\n            />\n\n            <div className=\"donut-labels\">\n                {data.map(([name, value, color, emoji], index) => {\n                    const truncatedName =\n                        name.length > 8 ? `${name.slice(0, 8)}...` : name;\n                    const percentage = ((value / total) * 100).toFixed(1);\n\n                    return (\n                        <div key={index} className=\"donut-label\" style={{ color }}>\n                            <span>{emoji} {truncatedName} - {percentage}%</span>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default RingChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC5B,MAAMC,KAAK,GAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;EAEhE;EACA,IAAIC,oBAAoB,GAAG,CAAC;EAC5B,MAAMC,cAAc,GAAGN,IAAI,CAACO,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,CAAC,KAAK;IACtD,MAAMC,UAAU,GAAIF,KAAK,GAAGR,KAAK,GAAI,GAAG;IACxC,MAAMW,eAAe,GAAGP,oBAAoB;IAC5C,MAAMQ,aAAa,GAAGR,oBAAoB,GAAGM,UAAU;IACvDN,oBAAoB,IAAIM,UAAU;IAClC,OAAO,GAAGD,KAAK,IAAIE,eAAe,CAACE,OAAO,CAAC,CAAC,CAAC,MAAMJ,KAAK,IAAIG,aAAa,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG;EAC3F,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EAEb,oBACIjB,OAAA;IAAKkB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBnB,OAAA;MACIkB,SAAS,EAAC,iBAAiB;MAC3BE,KAAK,EAAE;QACHC,UAAU,EAAE,kBAAkBb,cAAc;MAChD;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEFzB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBjB,IAAI,CAACO,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEc,KAAK,CAAC,EAAEC,KAAK,KAAK;QAC9C,MAAMC,aAAa,GACflB,IAAI,CAACmB,MAAM,GAAG,CAAC,GAAG,GAAGnB,IAAI,CAACoB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAGpB,IAAI;QACrD,MAAMG,UAAU,GAAG,CAAEF,KAAK,GAAGR,KAAK,GAAI,GAAG,EAAEa,OAAO,CAAC,CAAC,CAAC;QAErD,oBACIhB,OAAA;UAAiBkB,SAAS,EAAC,aAAa;UAACE,KAAK,EAAE;YAAER;UAAM,CAAE;UAAAO,QAAA,eACtDnB,OAAA;YAAAmB,QAAA,GAAOO,KAAK,EAAC,GAAC,EAACE,aAAa,EAAC,KAAG,EAACf,UAAU,EAAC,GAAC;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC,GAD9CE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACM,EAAA,GArCI9B,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}